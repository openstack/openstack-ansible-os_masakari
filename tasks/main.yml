---
# Copyright (c) 2018 NTT DATA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags:
    - always

- import_tasks: masakari_pre_install.yml
  tags:
    - masakari-install

- name: Install the python venv
  import_role:
    name: "python_venv_build"
  vars:
    venv_build_constraints: "{{ masakari_git_constraints }}"
    venv_build_distro_package_list: "{{ masakari_devel_distro_packages }}"
    venv_install_destination_path: "{{ masakari_bin | dirname }}"
    venv_install_distro_package_list: >-
      {{ ('masakari_monitor' in group_names) | ternary(masakari_monitor_distro_packages, masakari_distro_packages) }}
    venv_pip_install_args: "{{ masakari_pip_install_args }}"
    venv_pip_packages: "{{ masakari_pip_venv_packages }}"
    venv_packages_to_symlink: "{{ ('masakari_monitor' in group_names) | ternary(masakari_monitor_packages_to_symlink, []) }}"
    venv_facts_when_changed:
      - section: "masakari"
        option: "venv_tag"
        value: "{{ masakari_venv_tag }}"
  tags:
    - masakari-install

- import_tasks: masakari_post_install.yml
  tags:
    - masakari-config

- name: Run the systemd service role
  import_role:
    name: systemd_service
  vars:
    systemd_user_name: "{{ masakari_system_user_name }}"
    systemd_group_name: "{{ masakari_system_group_name }}"
    systemd_tempd_prefix: openstack
    systemd_slice_name: masakari
    systemd_lock_path: /var/lock/masakari
    systemd_CPUAccounting: true
    systemd_BlockIOAccounting: true
    systemd_MemoryAccounting: true
    systemd_TasksAccounting: true
    systemd_services: |-
      {% set services = [] %}
      {% for service in masakari_services.values() %}
      {%   if service.group in group_names %}
      {%     set _ = service.update({'enabled': 'yes', 'state': 'started'}) %}
      {%     set _ = service.pop('group') %}
      {%     set _ = services.append(service) %}
      {%   endif %}
      {% endfor %}
      {{ services }}
  tags:
    - masakari-config
    - systemd-service

- import_tasks: mq_setup.yml
  when:
    - "masakari_services['masakari-api']['group'] in group_names"
    - "inventory_hostname == ((groups[masakari_services['masakari-api']['group']] | intersect(ansible_play_hosts)) | list)[0]"
  vars:
    _oslomsg_rpc_setup_host: "{{ masakari_oslomsg_rpc_setup_host }}"
    _oslomsg_rpc_userid: "{{ masakari_oslomsg_rpc_userid }}"
    _oslomsg_rpc_password: "{{ masakari_oslomsg_rpc_password }}"
    _oslomsg_rpc_vhost: "{{ masakari_oslomsg_rpc_vhost }}"
    _oslomsg_rpc_transport: "{{ masakari_oslomsg_rpc_transport }}"
    _oslomsg_notify_setup_host: "{{ masakari_oslomsg_notify_setup_host }}"
    _oslomsg_notify_userid: "{{ masakari_oslomsg_notify_userid }}"
    _oslomsg_notify_password: "{{ masakari_oslomsg_notify_password }}"
    _oslomsg_notify_vhost: "{{ masakari_oslomsg_notify_vhost }}"
    _oslomsg_notify_transport: "{{ masakari_oslomsg_notify_transport }}"
  tags:
    - common-mq
    - masakari-config

- import_tasks: masakari_db_setup.yml
  when:
    - "masakari_services['masakari-api']['group'] in group_names"
    - "inventory_hostname == ((groups[masakari_services['masakari-api']['group']] | intersect(ansible_play_hosts)) | list)[0]"

- import_tasks: masakari_service_setup.yml
  when:
    - "masakari_services['masakari-api']['group'] in group_names"
    - "inventory_hostname == ((groups[masakari_services['masakari-api']['group']] | intersect(ansible_play_hosts)) | list)[0]"
  tags:
    - masakari-config

- name: Flush handlers
  meta: flush_handlers
