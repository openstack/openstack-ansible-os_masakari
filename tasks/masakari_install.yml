---
# Copyright (c) 2018 NTT DATA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO(odyssey4me):
# This can be simplified once all the roles are using
# python_venv_build. We can then switch to using a
# set of constraints in pip.conf inside the venv,
# perhaps prepared by giving a giving a list of
# constraints to the role.
- name: Create developer mode constraint file
  copy:
    dest: "/opt/developer-pip-constraints.txt"
    content: |
      {% for item in masakari_developer_constraints %}
      {{ item }}
      {% endfor %}
  when: masakari_developer_mode | bool

- name: Ensure remote wheel building is disabled in developer mode
  set_fact:
    venv_build_host: "{{ ansible_hostname }}"
  when:
    - masakari_developer_mode | bool

- name: Install the python venv
  include_role:
    name: "python_venv_build"
    private: yes
  vars:
    venv_install_destination_path: "{{ masakari_bin | dirname }}"
    venv_install_distro_package_list: >-
      {{ ('masakari_monitor' in group_names) | ternary(masakari_monitor_distro_packages, masakari_distro_packages) }}
    venv_build_distro_package_list: "{{ masakari_devel_distro_packages }}"
    venv_pip_install_args: "{{ masakari_pip_install_args }}"
    venv_pip_packages: "{{ masakari_venv_pip_packages }}"
    venv_facts_when_changed:
      - section: "masakari"
        option: "venv_tag"
        value: "{{ masakari_venv_tag }}"

- block:
  - name: Find the venv's python version
    find:
      paths: "{{ masakari_bin | dirname }}/lib/"
      patterns: "python*"
      file_type: directory
      recurse: no
    register: python_venv_details

  - name: Set python venvs details
    set_fact:
      venv_python_version: "{{ (python_venv_details.files[0].path | basename) }}"
      venv_python_major_version: "{{ (python_venv_details.files[0].path | basename)[:-2] }}"
      venv_python_lib_folder: "{{ python_venv_details.files[0].path }}"

  - name: Search for lib files to link
    shell: >-
      {{ (ansible_pkg_mgr == 'apt') | ternary('dpkg -L ' ~ (masakari_monitor_packages_to_symlink | join(' ')), 'rpm -ql ' ~ (masakari_monitor_packages_to_symlink | join(' ')) ) }}
      | egrep '^.*{{ venv_python_major_version }}.*/(site|dist)-packages/.*\.(py|so)'
    args:
      warn: no
    changed_when: false
    register: _python_files

  - name: Link the python host package files into venv
    file:
      src: "{{ item }}"
      dest: "{{ venv_python_lib_folder }}/site-packages/{{ item | basename }}"
      state: link
      force: yes
    with_items: "{{ _python_files.stdout_lines }}"
  when: "'masakari_monitor' in group_names"
